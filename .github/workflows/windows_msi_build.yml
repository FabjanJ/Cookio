name: Windows MSI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows Executable
        run: |
          flutter config --enable-windows-desktop
          flutter clean
          flutter pub get
          flutter build windows --release --verbose
          
          # Sicherstellen dass die EXE vorhanden ist
          if (!(Test-Path "build/windows/runner/Release/*.exe")) {
            Write-Output "Build-Verzeichnis:"
            Get-ChildItem -Path "build" -Recurse
            Write-Error "EXE-Datei wurde nicht gefunden!"
            exit 1
          }
          
          # Komprimieren f√ºr besseren Download
          Compress-Archive -Path "build/windows/runner/Release/*" -DestinationPath "app_release.zip"
          if (!$exePath) {
            Write-Error "Keine .exe-Datei gefunden!"
            exit 1
          }
          echo "EXE gefunden unter: $exePath"

      - name: Install WiX Toolset
        run: |
          choco install wixtoolset -y
          echo "WiX installiert unter:"
          dir "C:\Program Files (x86)\WiX Toolset *\bin\candle.exe" -Recurse

      - name: Generate MSI Installer
        run: |
          # App-Name und Pfade ermitteln
          $appName = (Get-Content pubspec.yaml | Select-String -Pattern '^name: (.+)$').Matches.Groups[1].Value
          $exePath = (Get-ChildItem -Path "build" -Filter "*.exe" -Recurse | Where-Object { $_.FullName -like "*runner\Release\*.exe" } | Select-Object -First 1).FullName
          $wixPath = (Get-ChildItem "C:\Program Files (x86)\WiX Toolset *\bin\" | Select-Object -First 1).FullName

          # WiX Config erstellen
          $wxsContent = @"
          <?xml version='1.0' encoding='UTF-8'?>
          <Wix xmlns='http://schemas.microsoft.com/wix/2006/wi'>
            <Product Id='*' Name='$appName' Language='1033' Version='1.0.0.0' Manufacturer='YourCompany' UpgradeCode='911b62cc-076b-4cd7-a563-f2ed00101f0e'>
              <Package InstallerVersion='200' Compressed='yes' InstallScope='perMachine' />
              <MajorUpgrade DowngradeErrorMessage='A newer version is already installed.' />
              <MediaTemplate EmbedCab='yes' />
              <Feature Id='ProductFeature' Title='Main Feature' Level='1'>
                <ComponentGroupRef Id='ProductComponents' />
              </Feature>
            </Product>
            <Fragment>
              <Directory Id='TARGETDIR' Name='SourceDir'>
                <Directory Id='ProgramFilesFolder'>
                  <Directory Id='INSTALLFOLDER' Name='$appName' />
                </Directory>
              </Directory>
            </Fragment>
            <Fragment>
              <ComponentGroup Id='ProductComponents' Directory='INSTALLFOLDER'>
                <Component Id='ApplicationFiles'>
                  <File Source='$exePath' />
                </Component>
              </ComponentGroup>
            </Fragment>
          </Wix>
          "@
          Set-Content -Path "installer/app.wxs" -Value $wxsContent

          # GUID generieren und MSI erstellen
          $guid = [guid]::NewGuid().ToString()
          & "$wixPath\candle.exe" -dExePath="$exePath" -dUpgradeCode="$guid" installer/app.wxs -out installer/app.wixobj
          & "$wixPath\light.exe" -ext WixUIExtension installer/app.wixobj -out installer/$appName.msi
          echo "Generated MSI with UpgradeCode: $guid"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app-release
          path: app_release.zip
